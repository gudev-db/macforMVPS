import streamlit as st
from google import genai
from google.genai.types import Tool, GenerateContentConfig, GoogleSearch
import uuid
import os
from pymongo import MongoClient
from datetime import datetime

# Configura√ß√£o do Gemini API
gemini_api_key = os.getenv("GEM_API_KEY")
client = genai.Client(api_key=gemini_api_key)

# Conex√£o com MongoDB
client_mongo = MongoClient("mongodb+srv://gustavoromao3345:RqWFPNOJQfInAW1N@cluster0.5iilj.mongodb.net/auto_doc?retryWrites=true&w=majority&ssl=true&ssl_cert_reqs=CERT_NONE&tlsAllowInvalidCertificates=true")
db = client_mongo['arquivos_planejamento']
collection = db['planejamentos_campanha']

# Fun√ß√£o para gerar um ID √∫nico para o planejamento
def gerar_id_planejamento():
    return str(uuid.uuid4())

# Fun√ß√£o para salvar no MongoDB
def save_to_mongo(briefing, estrategia_geral, midias_pagas, email_marketing, assessoria_imprensa, endomarketing,  nome_campanha):
    id_planejamento = gerar_id_planejamento()
    
    task_outputs = {
        "id_planejamento": 'Campanha_' + nome_campanha + '_' + id_planejamento,
        "nome_campanha": nome_campanha,
        "tipo_plano": 'Plano de Campanha',
        "data_criacao": datetime.now(),
        "briefing": briefing,
        "estrategia_geral": estrategia_geral,
        "midias_pagas": midias_pagas,
        "email_marketing": email_marketing,
        "assessoria_imprensa": assessoria_imprensa,
        "endomarketing": endomarketing,
    }

    collection.insert_one(task_outputs)
    st.success(f"Planejamento de campanha salvo com sucesso! ID: {id_planejamento}")

def generate_section(prompt, section_name, model="gemini-2.0-flash"):
    """Fun√ß√£o auxiliar para gerar se√ß√µes espec√≠ficas com prompts segmentados"""
    try:
        response = client.models.generate_content(
            model=model,
            contents=[prompt]
        )
        return response.text
    except Exception as e:
        st.error(f"Erro ao gerar a se√ß√£o {section_name}: {str(e)}")
        return f"Erro na gera√ß√£o desta se√ß√£o. Por favor, tente novamente."

def planejamento_campanha_page():
    st.title("Planejamento de Campanha para Holambra")
    st.markdown("""
    **Crie planejamentos de campanha completos considerando as especificidades de Holambra e o briefing fornecido.**
    """)
    
    with st.expander("üìã Instru√ß√µes"):
        st.markdown("""
        1. Preencha todos os campos do briefing abaixo
        2. Clique em 'Gerar Planejamento'
        3. Revise os resultados
        4. Salve no banco de dados
        """)
    
    # Formul√°rio de briefing
    with st.form("briefing_form"):
        st.subheader("Briefing da Campanha")
        
        nome_campanha = st.text_input("Nome da Campanha*", help="Ex: Lan√ßamento Relat√≥rio de Sustentabilidade 2024")
        data_evento = st.date_input("Data do Evento/Lan√ßamento*")
        objetivo_principal = st.text_area("Briefing*", help="O que a campanha precisa alcan√ßar?")
        publico_alvo = st.text_area("P√∫blico-Alvo*", help="Quem queremos atingir? Descreva detalhadamente")
        orcamento = st.number_input("Or√ßamento Total (R$)*", min_value=0)
        frentes_atuacao = st.multiselect("Frentes de Atua√ß√£o*", 
                                        ["Redes Sociais", "M√≠dias Pagas", "E-mail Marketing", 
                                         "Assessoria de Imprensa", "Endomarketing", "Outros"],
                                        default=["Redes Sociais", "M√≠dias Pagas"])
        informacoes_adicionais = st.text_area("Informa√ß√µes Adicionais", help="Contexto extra, restri√ß√µes, etc.")
        
        submitted = st.form_submit_button("Gerar Planejamento")
    
    if submitted:
        if not nome_campanha or not objetivo_principal or not publico_alvo:
            st.error("Por favor, preencha todos os campos obrigat√≥rios (*)")
        else:
            with st.spinner('Criando planejamento de campanha...'):
                # Construindo o contexto base
                contexto_base = f"""
                **Contexto**: Holambra √© uma cooperativa com forte atua√ß√£o no agroneg√≥cio, conhecida por sua produ√ß√£o de flores e plantas ornamentais, com compromisso com sustentabilidade e inova√ß√£o. N√£o h√° qualquer rela√ß√£o com as flores holambra ou a cidade. Se trata apenas da cooperativa agroindustrial.

                **Briefing da Campanha**:
                - Nome: {nome_campanha}
                - Data: {data_evento}
                - Briefing: {objetivo_principal}
                - P√∫blico-Alvo: {publico_alvo}
                - Or√ßamento: R${orcamento:,.2f}
                - Frentes: {", ".join(frentes_atuacao)}
                - Informa√ß√µes Adicionais: {informacoes_adicionais}
                """

                # 1. Estrat√©gia Geral (segmentada em partes menores)
                estrategia_geral = {
                    "posicionamento": generate_section(
                        f"{contexto_base}\n\nDesenvolva o posicionamento de marca para esta campanha, considerando:\n"
                        "- Tom de voz\n- Valores a serem destacados\n- Diferenciais competitivos\n- Como queremos ser percebidos pelo p√∫blico",
                        "Posicionamento de Marca"
                    ),
                    "narrativa": generate_section(
                        f"{contexto_base}\n\nCrie a narrativa central da campanha com:\n"
                        "- Storytelling principal\n- Mensagens-chave\n- Arco narrativo\n- Conex√£o emocional com o p√∫blico",
                        "Narrativa Central"
                    ),
                    "pilares": generate_section(
                        f"{contexto_base}\n\nDefina 3-5 pilares estrat√©gicos para esta campanha, cada um com:\n"
                        "- Nome do pilar\n- Objetivo espec√≠fico\n- Como ser√° implementado\n- Recursos necess√°rios",
                        "Pilares da Campanha"
                    ),
                    "cronograma": generate_section(
                        f"{contexto_base}\n\nCrie um cronograma detalhado com:\n"
                        "- Fases da campanha (pr√©-lan√ßamento, lan√ßamento, p√≥s-lan√ßamento)\n"
                        "- Datas importantes\n- Atividades por fase\n- Respons√°veis sugeridos",
                        "Cronograma"
                    )
                }

                # 2. M√≠dias Pagas (se aplic√°vel)
                midias_pagas = {}
                if "M√≠dias Pagas" in frentes_atuacao:
                    midias_pagas = {
                        "plataformas": generate_section(
                            f"{contexto_base}\n\nRecomenda√ß√£o de plataformas de m√≠dia paga:\n"
                            "- Plataformas mais adequadas\n- Justificativa para cada escolha\n"
                            "- % sugerido do or√ßamento para cada plataforma",
                            "Plataformas de M√≠dia Paga"
                        ),
                        "segmentacao": generate_section(
                            f"{contexto_base}\n\nEstrat√©gia de segmenta√ß√£o detalhada:\n"
                            "- P√∫blicos-alvo por plataforma\n- Interesses e comportamentos\n"
                            "- Par√¢metros demogr√°ficos\n- Lookalike audiences sugeridas",
                            "Segmenta√ß√£o de M√≠dia Paga"
                        ),
                        "formatos": generate_section(
                            f"{contexto_base}\n\nFormatos de an√∫ncio recomendados:\n"
                            "- Tipos de an√∫ncio por plataforma\n- Especifica√ß√µes t√©cnicas\n"
                            "- Melhores pr√°ticas para cada formato\n- Exemplos criativos",
                            "Formatos de An√∫ncio"
                        ),
                        "investimento": generate_section(
                            f"{contexto_base}\n\nProposta de investimento:\n"
                            "- Distribui√ß√£o por plataforma\n- Cen√°rios de or√ßamento\n"
                            "- ROI esperado\n- Argumentos para justificar o investimento",
                            "Investimento em M√≠dia Paga"
                        )
                    }

                # 3. E-mail Marketing (se aplic√°vel)
                email_marketing = {}
                if "E-mail Marketing" in frentes_atuacao:
                    email_marketing = {
                        "segmentacao": generate_section(
                            f"{contexto_base}\n\nSegmenta√ß√£o para e-mail marketing:\n"
                            "- Divis√£o da base\n- Crit√©rios de segmenta√ß√£o\n- Personas por segmento",
                            "Segmenta√ß√£o de E-mail"
                        ),
                        "conteudo": generate_section(
                            f"{contexto_base}\n\nConte√∫do dos e-mails:\n"
                            "- Assuntos sugeridos\n- Estrutura do conte√∫do\n- Chamadas para a√ß√£o\n"
                            "- Elementos visuais recomendados\n- Personaliza√ß√£o sugerida",
                            "Conte√∫do de E-mail"
                        ),
                        "cronograma": generate_section(
                            f"{contexto_base}\n\nCronograma de disparos:\n"
                            "- Frequ√™ncia\n- Timing em rela√ß√£o ao evento\n- Gatilhos para automa√ß√£o",
                            "Cronograma de E-mails"
                        )
                    }

                # 4. Assessoria de Imprensa (se aplic√°vel)
                assessoria_imprensa = {}
                if "Assessoria de Imprensa" in frentes_atuacao:
                    assessoria_imprensa = {
                        "release": generate_section(
                            f"{contexto_base}\n\nEstrutura do release:\n"
                            "- √Çngulo principal\n- Destaques\n- Cita√ß√µes sugeridas\n"
                            "- Dados para incluir\n- Contatos para a imprensa",
                            "Release de Imprensa"
                        ),
                        "veiculos": generate_section(
                            f"{contexto_base}\n\nLista de ve√≠culos e jornalistas:\n"
                            "- Ve√≠culos priorit√°rios\n- Jornalistas especializados\n"
                            "- Bloggers/influencers relevantes\n- M√≠dias trade",
                            "Lista de Ve√≠culos"
                        ),
                        "pautas": generate_section(
                            f"{contexto_base}\n\nPautas adicionais:\n"
                            "- Ideias de pautas derivadas\n- Opini√µes de especialistas\n"
                            "- Casos de sucesso relacionados\n- Dados estat√≠sticos relevantes",
                            "Pautas Adicionais"
                        )
                    }

                # 5. Endomarketing (se aplic√°vel)
                endomarketing = {}
                if "Endomarketing" in frentes_atuacao:
                    endomarketing = {
                        "engajamento": generate_section(
                            f"{contexto_base}\n\nEstrat√©gia de engajamento interno:\n"
                            "- Formas de envolver os colaboradores\n- Programas de embaixadores\n"
                            "- Reconhecimento e recompensas\n- Comunica√ß√£o interna",
                            "Engajamento Interno"
                        ),
                        "acoes": generate_section(
                            f"{contexto_base}\n\nA√ß√µes de endomarketing:\n"
                            "- Eventos internos\n- Treinamentos\n- Materiais de comunica√ß√£o\n"
                            "- Ativa√ß√µes criativas\n- Feedback dos colaboradores",
                            "A√ß√µes de Endomarketing"
                        )
                    }

                # 6. M√©tricas Detalhadas
                metricas_detalhadas = {
                    "por_frente": generate_section(
                        f"{contexto_base}\n\nM√©tricas por frente de atua√ß√£o:\n"
                        "- KPIs espec√≠ficos para cada canal\n- Metas quantitativas\n"
                        "- Benchmarks do setor\n- Periodicidade de medi√ß√£o",
                        "M√©tricas por Frente"
                    ),
                    "ferramentas": generate_section(
                        f"{contexto_base}\n\nFerramentas de acompanhamento:\n"
                        "- Plataformas de analytics\n- Dashboards recomendados\n"
                        "- Relat√≥rios automatizados\n- Integra√ß√µes sugeridas",
                        "Ferramentas de M√©tricas"
                    ),
                    "roi": generate_section(
                        f"{contexto_base}\n\nProje√ß√£o de ROI:\n"
                        "- C√°lculos esperados\n- Cen√°rios otimista/realista/conservador\n"
                        "- Valor do cliente ao longo do tempo\n- M√©tricas de efici√™ncia",
                        "Proje√ß√£o de ROI"
                    )
                }

                # Exibi√ß√£o dos resultados
                st.success("Planejamento gerado com sucesso!")
                
                st.subheader("üìã Briefing Resumido")
                st.markdown(f"""
                - **Campanha**: {nome_campanha}
                - **Data**: {data_evento}
                - **Objetivo**: {objetivo_principal}
                - **P√∫blico**: {publico_alvo}
                - **Or√ßamento**: R${orcamento:,.2f}
                """)
                
                # Estrat√©gia Geral
                st.subheader("üéØ Estrat√©gia Geral")
                with st.expander("Posicionamento de Marca"):
                    st.markdown(estrategia_geral["posicionamento"])
                with st.expander("Narrativa Central"):
                    st.markdown(estrategia_geral["narrativa"])
                with st.expander("Pilares da Campanha"):
                    st.markdown(estrategia_geral["pilares"])
                with st.expander("Cronograma Detalhado"):
                    st.markdown(estrategia_geral["cronograma"])
                
                # M√≠dias Pagas
                if "M√≠dias Pagas" in frentes_atuacao:
                    st.subheader("üì¢ M√≠dias Pagas")
                    with st.expander("Plataformas Recomendadas"):
                        st.markdown(midias_pagas["plataformas"])
                    with st.expander("Estrat√©gia de Segmenta√ß√£o"):
                        st.markdown(midias_pagas["segmentacao"])
                    with st.expander("Formatos de An√∫ncio"):
                        st.markdown(midias_pagas["formatos"])
                    with st.expander("Investimento e ROI"):
                        st.markdown(midias_pagas["investimento"])
                
                # E-mail Marketing
                if "E-mail Marketing" in frentes_atuacao:
                    st.subheader("‚úâÔ∏è E-mail Marketing")
                    with st.expander("Segmenta√ß√£o e Personas"):
                        st.markdown(email_marketing["segmentacao"])
                    with st.expander("Conte√∫do dos E-mails"):
                        st.markdown(email_marketing["conteudo"])
                    with st.expander("Cronograma de Disparos"):
                        st.markdown(email_marketing["cronograma"])
                
                # Assessoria de Imprensa
                if "Assessoria de Imprensa" in frentes_atuacao:
                    st.subheader("üì∞ Assessoria de Imprensa")
                    with st.expander("Release de Imprensa"):
                        st.markdown(assessoria_imprensa["release"])
                    with st.expander("Ve√≠culos e Jornalistas"):
                        st.markdown(assessoria_imprensa["veiculos"])
                    with st.expander("Pautas Adicionais"):
                        st.markdown(assessoria_imprensa["pautas"])
                
                # Endomarketing
                if "Endomarketing" in frentes_atuacao:
                    st.subheader("üè¢ Endomarketing")
                    with st.expander("Engajamento Interno"):
                        st.markdown(endomarketing["engajamento"])
                    with st.expander("A√ß√µes Espec√≠ficas"):
                        st.markdown(endomarketing["acoes"])
                
                # M√©tricas
                st.subheader("üìä M√©tricas Detalhadas")
                with st.expander("M√©tricas por Frente"):
                    st.markdown(metricas_detalhadas["por_frente"])
                with st.expander("Ferramentas de Acompanhamento"):
                    st.markdown(metricas_detalhadas["ferramentas"])
                with st.expander("Proje√ß√£o de ROI"):
                    st.markdown(metricas_detalhadas["roi"])
                
                # Bot√£o para salvar no MongoDB
                if st.button("üíæ Salvar Planejamento"):
                    save_to_mongo(
                        briefing={
                            "nome_campanha": nome_campanha,
                            "data_evento": str(data_evento),
                            "objetivo": objetivo_principal,
                            "publico_alvo": publico_alvo,
                            "orcamento": orcamento,
                            "frentes": frentes_atuacao,
                            "informacoes_adicionais": informacoes_adicionais
                        },
                        estrategia_geral=estrategia_geral,
                        midias_pagas=midias_pagas if "M√≠dias Pagas" in frentes_atuacao else {},
                        email_marketing=email_marketing if "E-mail Marketing" in frentes_atuacao else {},
                        assessoria_imprensa=assessoria_imprensa if "Assessoria de Imprensa" in frentes_atuacao else {},
                        endomarketing=endomarketing if "Endomarketing" in frentes_atuacao else {},
                        metricas=metricas_detalhadas,
                        nome_campanha=nome_campanha
                    )
